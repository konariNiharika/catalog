const fs = require('fs');
const readline = require('readline');

// Function to convert a number from a given base to decimal
function convertToDecimal(base, value) {
    return parseInt(value, base);
}

// Function to compute the constant term 'c' using the given JSON input
function findConstantTerm(jsonData, k) {
    let roots = [];

    // Extract and convert root values
    for (let key in jsonData) {
        if (key !== "keys") {
            let base = parseInt(jsonData[key].base);
            let value = jsonData[key].value;
            roots.push(convertToDecimal(base, value));
        }
    }

    // Sort the roots to ensure the lowest indices are picked
    roots.sort((a, b) => a - b);

    // Compute the constant term using the first k roots
    let constantTerm = 1;
    for (let i = 0; i < k; i++) {
        constantTerm *= roots[i];
    }

    return constantTerm;
}

// Function to get user input
async function getUserInput() {
    const rl = readline.createInterface({
        input: process.stdin,
        output: process.stdout
    });

    const askQuestion = (query) => new Promise(resolve => rl.question(query, resolve));

    try {
        const n = await askQuestion("Enter n (total roots provided): ");
        const k = await askQuestion("Enter k (minimum roots required): ");
        const filename = await askQuestion("Enter JSON filename (e.g., data.json): ");
        rl.close();

        // Read and parse the JSON file
        const jsonString = fs.readFileSync(filename, 'utf8');
        const jsonData = JSON.parse(jsonString);

        // Compute and print the constant term
        const result = findConstantTerm(jsonData, parseInt(k));
        console.log("Constant term (c):", result);
    } catch (error) {
        console.error("Error reading input:", error);
    }
}

// Run the function to get input and process the JSON
getUserInput();
